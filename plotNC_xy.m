function [datamat] = plotNC_xy (fname,dvar,dbin,ivar,ibin,prof,sect,scale)
%% ---------------------------------------------------------------------
%% function to retrieve the vertical or horizontal profiles of one or
%% two variables from a netCDF file; to plot a variable versus time or
%% versus altitude or versus another variable. the function is written
%% for the netCDF files generated by the MISTRA model (gas.nc, aq.nc,
%% jrate.nc, meteo.nc). it will work for other netCDF files with similar
%% format.
%%
%% NB: time and altitude are expressed as timesteps and level numbers.
%% NB: the first timestep and level number are dropped.
%%
%% format of the netCDF file:
%%       variable(rec, n, y, x)
%%                rec = timesteps
%%                n = model level number (altitude)
%%                y = 1
%%                x = aerosol bin (= 1 for other variables)
%%
%% input:
%%       fname = name of the netCDF file
%%       dvar = dependent variable
%%       dbin = aerosol bin of dvar ("1" if dvar not in aerosol)
%%       ivar = "time" OR "altitude" OR independent variable
%%       ibin = aerosol bin of ivar ("1" if ivar not in aerosol)
%%       prof = "horizontal" or "vertical" profile
%%       sect = level number (if prof="horizontal") OR
%%              timestep (if prof="vertical")
%%       scale = "lin" to plot on linear scale OR
%%               "log" to plot on logarithmic scale OR
%%               "no" if no plot is required
%%
%% output:
%%        datamat = vertical/horizontal matrix of retrieved variables
%%        -> make plot (if required)
%%
%% version 1.9, march 2013
%% author: R.S.
%% ---------------------------------------------------------------------

  %% convert input strings to integers
  dbin = str2num(dbin);
  ibin = str2num(ibin);
  sect = str2num(sect);

  %% open netCDF file
  fin = netcdf(fname,'r');

  %% retrieve an horizontal profile
  if (strcmp(prof,'horizontal') == 1 && strcmp(ivar,'altitude') == 0)

    %% set the X-axis (either time -as timestep- or a variable)
    n_rec = fin('rec');
    xn = n_rec(:);
    if (strcmp(ivar,'time') == 1)
      xax = [2:1:xn];
      xxax = [nan;sect];
      xet = ivar;
      styl = '-b';
    else
      xax = fin{ivar}(2:xn,sect,1,ibin)';
      xxax = [sect;sect];
      xet = [ivar,' (bin ',num2str(ibin),')'];
      styl = '*k';
    end
    tet = ['level number ',num2str(sect)];

    %% set the Y-axis
    yax = fin{dvar}(2:xn,sect,1,dbin)';
    yet = [dvar,' (bin ',num2str(dbin),')'];

    %% create horizontal matrix with retrieved variables
    datamat = [xxax,[xax;yax]];

  %% retrieve a vertical profile
  elseif (strcmp(prof,'vertical') == 1 && strcmp(ivar,'time') == 0)

    %% set the Y-axis (either altitude -as level number- or a variable)
    n_n = fin('n');
    yn = n_n(:);
    if (strcmp(ivar,'altitude') == 1)
      yax = [2:1:yn]';
      yyax = [nan,sect];
      yet = ivar;
      styl = '-b';
    else
      yax = fin{ivar}(sect,2:yn,1,ibin)';
      yyax = [sect,sect];
      yet = [ivar,' (bin ',num2str(ibin),')'];
      styl = '+k';
    end
    tet = ['timestep ',num2str(sect)];

    %% set the X-axis
    xax = fin{dvar}(sect,2:yn,1,dbin)';
    xet = [dvar,' (bin ',num2str(dbin),')'];

    %% create vertical matrix with retrieved variables
    datamat = [yyax;[yax,xax]];

  %% exit if input not valid
  else
    datamat = [];
    fprintf ('\nINVALID INPUT\n');
    return;
  end

  %% make plot
  tstr = [yet,' vs ',xet,' at ',tet];
  if (strcmp(scale,'lin') == 1)
    ut_plot (xax,xet,yax,yet, styl,tstr,dvar,'lin')
  elseif (strcmp(scale,'log') == 1 )
    switch (ivar)
      case 'time'
        ut_plot (xax,xet,yax,yet, styl,tstr,dvar,'logy')
      case 'altitude'
        ut_plot (xax,xet,yax,yet, styl,tstr,dvar,'logx')
      otherwise
        ut_plot (xax,xet,yax,yet, styl,tstr,dvar,'log')
    end
    %% no plot
  else
    fprintf ( ['>>>>> ', prof, ' profile of ', tstr, ' retrieved\n'] );
  end

end
