function [rlist,rdata,plist,pdata] = plotNC_rates (fname,rtxt,ptxt,prof,sect,scale)
%% ---------------------------------------------------------------------
%% function to retrieve and plot the vertical or horizontal profiles of
%% the reaction rates of all reactions involving a selected species as a
%% reactant or as a product. the function is written for the netCDF
%% reaction rates file generated by the MISTRA model (rxnrate.nc). it
%% will work for other netCDF files with similar format.
%%
%% the function requires two cell arrays with the reactions where
%% selected species is reactant and with the reactions where selected
%% species is product:
%%  ==> see documentation of mistraReactions.m <==
%%
%% NB: time is expressed as timesteps.
%% NB: the first timestep is dropped.
%%
%% !!! WARNING !!!
%%     in default configuration MISTRA outputs reaction rates
%%     only for 15 model levels. these are hardcoded in the
%%     MISTRA code (subroutine initc) and in this function
%%     (see lines 98-104).
%%
%% format of the netCDF file:
%%       variable(rec, nlev, nrxn, x)
%%                rec = timesteps
%%                nlev = model output level (1-15)
%%                nrxn = reaction code number
%%                x = 1
%%
%% input:
%%       fname = name of the netCDF file
%%       rtxt = cell array of reactions where species is reactant
%%       ptxt = cell array of reactions where species is product
%%       prof = "horizontal" or "vertical" profile
%%       sect = output level (if prof="horizontal") OR
%%              timestep (if prof="vertical")
%%       scale = "lin" to plot on linear scale OR
%%               "log" to plot on logarithmic scale OR
%%               "no" if no plot is required
%%
%% output:
%%        rlist = list of destruction reactions
%%        rdata = vertical/horizontal matrix of reaction rates
%%                   of destruction
%%        plist = list of production reactions
%%        pdata = vertical/horizontal matrix of reaction rates
%%                   of production
%%        -> make plot (if required)
%%
%% version 2.5, may 2013
%% author: R.S.
%% ---------------------------------------------------------------------

  %% convert input strings to integers
  sect = str2num(sect);

  %% open netCDF file
  fin = netcdf(fname,'r');

  %% plot an horizontal profile
  if (strcmp(prof,'horizontal') == 1)

    %% set the X-axis (time -as timestep)
    n_rec = fin('rec');
    xn = n_rec(:);
    xax = [2:1:xn];

    %% plot labels
    xet = 'time';
    yet = 'mol m-3 s-1';

    %% initialize arrays
    rax = []; rlist = {'time'}; a = 1;
    pax = []; plist = {'time'}; b = 1;

    %% reactions where species is reactant
    if (strcmp(rtxt{1,1},'') == 0)
      for r = 1:1:size(rtxt,1)
        rcode = str2num(rtxt{r,1});
        yx = fin{'Rconst'}(2:xn,sect,rcode,1)';
        yx = [sect,(-1*yx)];
        rax = [rax;yx];
        rlist{a+1} = [rtxt{a,2},'->',rtxt{a,3}];
        a = a + 1;
      end
    end
    rdata = [[nan,xax];rax];

    %% reactions where species is product
    if (strcmp(ptxt{1,1},'') == 0)
      for p = 1:1:size(ptxt,1)
        pcode = str2num(ptxt{p,1});
        yx = fin{'Rconst'}(2:xn,sect,pcode,1)';
        yx = [sect,yx];
        pax = [pax;yx];
        plist{b+1} = [ptxt{b,2},'->',ptxt{b,3}];
        b = b + 1;
      end
    end
    pdata = [[nan,xax];pax];

    %% match output level to level number (HARDCODED in MISTRA)
    il = [5,15,25,35,45,55,65,75,85,95,105,115,125,135,145];
    if (strcmp(num2str(sect),'1') == 1)
      ils = 2;
    else
      ils = il(sect);
    end

    %% set the Y-axis and title
    yax = [rax(:,2:end);pax(:,2:end)];
    tet = ['level number ',num2str(ils)];

    %% plot a vertical profile
  elseif (strcmp(prof,'vertical') == 1)

    %% set the Y-axis (altitude -as level number)
    n_lev = fin('nlev');
    yn = n_lev(:);
    yax = [1:1:yn]';

    %% plot labels
    xet = 'mol m-3 s-1';
    yet = 'altitude';

    %% initialize arrays
    rax = []; rlist = {'altitude'}; a = 1;
    pax = []; plist = {'altitude'}; b = 1;

    %% reactions where species is reactant
    if (strcmp(rtxt{1,1},'') == 0)
      for r = 1:1:size(rtxt,1)
        rcode = str2num(rtxt{r,1});
        xx = fin{'Rconst'}(sect,1:yn,rcode,1)';
        xx = [sect;(-1*xx)];
        rax = [rax,xx];
        rlist{a+1} = [rtxt{a,2},'->',rtxt{a,3}];
        a = a + 1;
      end
    end
    rdata = [[nan;yax],rax];

    %% reactions where species is product
    if (strcmp(ptxt{1,1},'') == 0)
      for p = 1:1:size(ptxt,1)
        pcode = str2num(ptxt{p,1});
        xx = fin{'Rconst'}(sect,1:yn,pcode,1)';
        xx = [sect;xx];
        pax = [pax,xx];
        plist{b+1} = [ptxt{b,2},'->',ptxt{b,3}];
        b = b + 1;
      end
    end
    pdata = [[nan;yax],pax];

    %% set the X-axis and title
    xax = [rax(2:end,:),pax(2:end,:)];
    tet = ['timestep ',num2str(sect)];

    %% exit if input not valid
  else
    rlist = []; rdata = [];
    plist = []; pdata = [];
    fprintf ('\nINVALID INPUT\n');
    return;
  end

  %% make plot
  tstr = ['reaction rates at ',tet];
  lstr = [rlist(2:end),plist(2:end)];

  if (strcmp(scale,'lin') == 1)
    ut_plot (xax,xet, yax,yet, '-',tstr,lstr, 'lin')
  elseif (strcmp(scale,'log') == 1 )
    switch (prof)
      case 'horizontal'
        ut_plot (xax,xet, yax,yet, '-',tstr,lstr, 'logy')
      case 'vertical'
        ut_plot (xax,xet, yax,yet, '-',tstr,lstr, 'logx')
    end
    %% no plot
  else
    if (strcmp(prof,'horizontal') == 1)
      secstr = ['level ',num2str(ils)];
    else
      secstr = ['timestep ',num2str(sect)];
    end
    fprintf ( ['>>>>> ',prof,' profile of reaction rates at ',secstr,' retrieved\n'] );
  end

end
